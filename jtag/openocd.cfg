source [find interface/tiaousb.cfg]
set RAMBOOT 1
set CPUTAPID 0x0f0f0f0f0f
source [find target/ep7312.cfg]
source [find mem_helper.tcl]
reset_config trst_only
adapter_khz 5000

gdb_flash_program disable
gdb_memory_map disable


init
#flash init

#flash probe 0

# load_linux ../output/target " "

proc load_linux {path cmdline} {
#	load_image $fname [expr $address - $foffset] bin $address $length
	
	soft_reset_halt

	sleep 1

	mww 0x80000100 0x100

	if { [ expr [ mrw 0x80001140 ] & 0x40 ] } {
		echo "Clock 13MHz"
		set _UARTS 0x6000b
	} else {
		echo "Clock 18-73MHz"
		set _UARTS 0x60017
	}
	mww 0x800004c0 $_UARTS

	#send F to UART
	mww 0x80000480 0x46

	reg sp_svc 0x1000800

	# flush v4
	arm mcr 15 0 7 7 0 0       
	arm mcr 15 0 8 7 0 0 	

	# SPEED
	mww 0x80002200 0x6

	sleep 1000

	adapter_khz 20000

	# SDRAM
	mww 0x80002300 0x522

	mmw 0x80001100 0x0 0x4

	# FLASHER
	mww 0x800022C0 0x40	

	# FLASH 
	mww 0x80000180 0x14 

	# SERIAL

#define KERNEL_OFFSET	0x00038000	/* beginning of kernel image */
#define PAGE		0x1000
#define INITRD_START	0xc0c00000


	load_image ${path}/zImage-ram 0xc0038000
	load_image ${path}/rootfs-ram.lzma 0xc0c00000
	exec ../boot/atags.py --mem 0xc0000000 0x01000000 --initrd ${path}/rootfs-ram.lzma 0xc0c00000 atags-ram.bin ${cmdline}
	load_image atags-ram.bin 0xc0001000

	reg 0  0
	reg 1  0x5b
	reg 2  0xc0001000
	halt
	reg pc 0xc0038000

#	resume 0xc0038000
	resume
}

